/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { FloatNullableFilter } from "../../util/FloatNullableFilter";
import { Type } from "class-transformer";
import { IsOptional, ValidateNested, IsEnum } from "class-validator";
import { StringFilter } from "../../util/StringFilter";
import { OrderListRelationFilter } from "../../order/base/OrderListRelationFilter";
import { TraderWhereUniqueInput } from "../../trader/base/TraderWhereUniqueInput";
import { EnumPositionTypeField } from "./EnumPositionTypeField";

@InputType()
class PositionWhereInput {
  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  amount?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  currentPrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: FloatNullableFilter,
  })
  @Type(() => FloatNullableFilter)
  @IsOptional()
  @Field(() => FloatNullableFilter, {
    nullable: true,
  })
  entryPrice?: FloatNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => OrderListRelationFilter,
  })
  @ValidateNested()
  @Type(() => OrderListRelationFilter)
  @IsOptional()
  @Field(() => OrderListRelationFilter, {
    nullable: true,
  })
  orders?: OrderListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => TraderWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => TraderWhereUniqueInput)
  @IsOptional()
  @Field(() => TraderWhereUniqueInput, {
    nullable: true,
  })
  trader?: TraderWhereUniqueInput;

  @ApiProperty({
    required: false,
    enum: EnumPositionTypeField,
  })
  @IsEnum(EnumPositionTypeField)
  @IsOptional()
  @Field(() => EnumPositionTypeField, {
    nullable: true,
  })
  typeField?: "Option1";
}

export { PositionWhereInput as PositionWhereInput };
